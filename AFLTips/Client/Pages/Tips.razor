@page "/tips"
@inject HttpClient Http
@using data = AFLTips.Shared.DataModels
@using view = AFLTips.Shared.ViewModels


@if (currentRound == 0 || players == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1>Tips for Round @currentRound</h1>

    <div class="container mt-4">
        <div class="row justify-content-around">
            <div class="col-12">
                <form>
                    <div class="form-group">
                        <select class="form-select" aria-label="player select">
                            @foreach (var player in players)
                            {
                            Player:
                                <option value="@player.PlayerId">@player.PlayerName</option>
                            }
                        </select>
                    </div>
                    @foreach (var match in matches)
                    {
                        <div class="input-group mb-25">
                            <div class="form-check form-check-inline justify-content-start mb-10">
                                <label class="form-check-label" for="inlineCheckBox @match.HomeTeamId">@match.HomeTeamName</label>
                                <img src="/images/team-logos/@(match.HomeTeamId).png" alt="Image" width="40" height="40">
                                <input class="form-check-input" type="radio" name="tip-@match.HomeTeamId-@match.AwayTeamId" id="inlineCheckBox-@match.HomeTeamId" value="@match.HomeTeamId">
                            </div>

                            <div class="form-check form-check-inline justify-content-end">
                                <input class="form-check-input" type="radio" name="tip-@match.HomeTeamId-@match.AwayTeamId" id="inlineCheckBox-@match.AwayTeamId" value="@match.AwayTeamId">
                                <img src="/images/team-logos/@(match.AwayTeamId).png" alt="Image" width="40" height="40">
                                <label class="form-check-label" for="inlineCheckBox-@match.AwayTeamId">@match.AwayTeamName</label>
                            </div>

                        </div>
                        <br/>
                    }
                    <button type="submit" class="btn btn-primary">Submit</button>
                </form>
            </div>
        </div>
    </div>
}

@code {
    private int currentRound;
    private List<data.Player> players;
    private List<view.MatchViewModel> matches;

    protected async override Task OnInitializedAsync()
    {
        var getCurrentRoundTask = Http.GetFromJsonAsync<int>("api/fixture/currentRound");
        var getPlayersTask = Http.GetFromJsonAsync<List<data.Player>>("api/player");

        await Task.WhenAll(getCurrentRoundTask, getPlayersTask);

        currentRound = getCurrentRoundTask.Result;
        players = getPlayersTask.Result;

        matches = await Http.GetFromJsonAsync<List<view.MatchViewModel>>($"api/fixture/matchesByRound?RoundId={currentRound}");
    }
}
